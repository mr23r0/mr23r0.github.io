<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-12-25T22:44:10+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">[mr23r0] Saransh Saraf</title><subtitle>One place to share everything necessery</subtitle><author><name>Saransh Saraf</name></author><entry><title type="html">Linux by Vikku Podcast</title><link href="http://localhost:4000/linux-by-vikku-podcast.html" rel="alternate" type="text/html" title="Linux by Vikku Podcast" /><published>2023-12-25T00:00:00+05:30</published><updated>2023-12-25T00:00:00+05:30</updated><id>http://localhost:4000/linux-by-vikku-podcast</id><content type="html" xml:base="http://localhost:4000/linux-by-vikku-podcast.html">&lt;iframe width=&quot;98%&quot; height=&quot;300&quot; class=&quot;ioda&quot; style=&quot;filter:invert(100%)&quot; src=&quot;https://www.youtube.com/embed/jokYRytaHX4&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;&gt;&lt;/iframe&gt;</content><author><name>Saransh Saraf</name></author><category term="featured" /><summary type="html"></summary></entry><entry><title type="html">Unlocking the Power of Observation : the front door key üîë</title><link href="http://localhost:4000/unlocking-the-power-of-observation-part-2.html" rel="alternate" type="text/html" title="Unlocking the Power of Observation : the front door key üîë" /><published>2023-09-16T00:00:00+05:30</published><updated>2023-09-16T00:00:00+05:30</updated><id>http://localhost:4000/unlocking-the-power-of-observation-part-2</id><content type="html" xml:base="http://localhost:4000/unlocking-the-power-of-observation-part-2.html">&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*sLr3oSvwjgfx_6N-Mzgv0g.png&quot; alt=&quot;banner&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are currently in the era of SaaS applications and startups. SaaS applications have become ubiquitous, serving various purposes, from sending notifications to collecting feedback. There seems to be a SaaS application for virtually every need, and startups are capitalizing on this trend.&lt;/p&gt;

&lt;p&gt;For those familiar with &lt;em&gt;web applications&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, the concept is quite clear: applications require users to create accounts to establish user identities and workspaces. Within these workspaces, users can perform tasks and store their relevant information.&lt;/p&gt;

&lt;p&gt;The development and maintenance of user registrations and session management can be quite challenging in terms of security. Therefore, it‚Äôs not surprising that SaaS services offer user management features that can be easily integrated with just a few clicks. Startups often opt for these solutions as their primary choice. This allows them to allocate their resources and funds toward developing their core solutions, rather than diverting them to the complexities of user management.&lt;/p&gt;

&lt;p&gt;I noticed a similar situation during a &lt;em&gt;penetration test&lt;/em&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; conducted on ‚Äúcompany.com.‚Äù It‚Äôs worth noting that ‚Äúcompany.com‚Äù serves as an alias for the actual application that will be the focus of discussion throughout this article.&lt;/p&gt;

&lt;p&gt;While examining the login page, I recognized that it was associated with a SaaS service providing user management features. To gain deeper insights, I routed every request through Burp Suite, with the assumption that I might discover something valuable about the service.&lt;/p&gt;

&lt;p&gt;Following several registration processes and login-logout interactions, I decided to inspect the requests within Burp Proxy and the Target tab. To my surprise, I noticed that certain domains and subdomains were making calls to the SaaS application. Given that such calls are typically intended to be executed on the server side, this observation raised suspicions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*fDKgDM19nqs1NYWrNlbyDg.jpeg&quot; alt=&quot;image&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Among the various calls, two in particular from api.saasapp.com caught my attention. Upon closer examination, I discovered that the response from the POST request included an &lt;em&gt;OAuth token&lt;/em&gt;&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, with the request containing both a client ID and a secret.&lt;/p&gt;

&lt;p&gt;For those who may not be familiar, it‚Äôs essential to understand that virtually every SaaS application offering technical and non-technical services provides APIs for programmatic usage. As I delved into the SaaS application‚Äôs documentation, I learned that the key and secret serve the purpose of connecting the customer application (company.com) with the SaaS application (saasapp.com), facilitating the sharing of user identities and session tokens.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*d0iAUVZ-8GFNEO7HZcKlrg.jpeg&quot; alt=&quot;image&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon further exploration of the keys, I found that they possess administrative privileges. Using the generated token associated with these keys, I gained the ability to retrieve user data, make modifications to their information, and even add members with administrative control over the SaaS application account for the application (company.com).&lt;/p&gt;

&lt;p&gt;It granted me Administrator access to the &lt;em&gt;User Management System&lt;/em&gt;&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;, highlighting yet another instance of how expanding the attack surface and meticulously scrutinizing details can uncover creative yet crucial vulnerabilities. I often refer to this approach as ‚ÄúUnlocking the Power of Observation.‚Äù This marks the second article in this series.&lt;/p&gt;

&lt;p&gt;Before concluding, I would like you to consider this scenario: What if I were unaware of these SaaS applications or the current trends in the development landscape? I might have dismissed it as a ‚Äúrabbit hole.‚Äù Therefore, I encourage you not to limit your learning. Embrace the opportunity to learn about a wide range of topics because knowledge is an asset that never goes to waste ‚Äî except perhaps for those intricate mathematical calculations we encountered in school ;)&lt;/p&gt;

&lt;p&gt;This concludes my discussion on this topic. I hope you‚Äôve gained new insights from this.&lt;br /&gt;
Thank you!&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/what-is/web-application/#:~:text=A%20web%20application%20is%20software,with%20customers%20conveniently%20and%20securely.&quot; target=&quot;_blank&quot;&gt;Web Applications&lt;/a&gt;¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.synopsys.com/glossary/what-is-penetration-testing.html&quot; target=&quot;_blank&quot;&gt;Penetration Testing/Tests&lt;/a&gt;¬†&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc6749&quot; target=&quot;_blank&quot;&gt;OAuth Tokens&lt;/a&gt;¬†&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.egnyte.com/guides/governance/user-management#:~:text=User%20management%20is%20a%20system,Providing%20users%20with%20authenticated%20access&quot; target=&quot;_blank&quot;&gt;User Management System&lt;/a&gt;¬†&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Saransh Saraf</name></author><category term="posts" /><summary type="html"></summary></entry><entry><title type="html">Uncovering the Secrets : The Potential of Web Archive in Bug Bounty Programs</title><link href="http://localhost:4000/uncovering-the-secrets-part-1.html" rel="alternate" type="text/html" title="Uncovering the Secrets : The Potential of Web Archive in Bug Bounty Programs" /><published>2023-06-08T00:00:00+05:30</published><updated>2023-06-08T00:00:00+05:30</updated><id>http://localhost:4000/uncovering-the-secrets-part-1</id><content type="html" xml:base="http://localhost:4000/uncovering-the-secrets-part-1.html">&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:1100/format:webp/1*7tGxwHgIUzHlLJqIgWXAJA.png&quot; alt=&quot;banner&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-infamous-wayback-machine&quot;&gt;The Infamous WayBack Machine&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;‚ÄúAccording to ChatGPT, The Wayback Machine is a digital archive of the World Wide Web, maintained by the Internet Archive. It is a valuable tool that allows users to access and browse archived versions of websites as they appeared at different points in time. The Wayback Machine captures and stores snapshots of web pages, creating a historical record of the internet.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The WayBack Machine was initially designed with the intention of serving a noble purpose by preserving valuable knowledge and information from web pages that have been removed or deleted. However, as it fulfills this objective, the WayBack Machine also records and retains the URLs and any sensitive information mentioned within those URLs.&lt;/p&gt;

&lt;h3 id=&quot;unraveling-vulnerabilities-wide-open&quot;&gt;Unraveling Vulnerabilities Wide Open&lt;/h3&gt;
&lt;p&gt;Although the WayBack Machine logs various aspects for its intended purpose, it also inadvertently captures vulnerabilities present in applications and sensitive information that was never intended to be made public. These may include confidential details like discount coupons, various types of tokens, hidden &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; or query parameters, and similar information.&lt;/p&gt;

&lt;p&gt;If utilized correctly, these seemingly minor details can potentially lead bug bounty hunters to discover critical and groundbreaking vulnerabilities.&lt;/p&gt;

&lt;p&gt;To gain a better understanding, let‚Äôs examine a few examples I have come across within the past six months:&lt;/p&gt;

&lt;h3 id=&quot;password-leakage&quot;&gt;Password leakage&lt;/h3&gt;
&lt;p&gt;As we are aware, in approximately one out of every three SaaS applications or service provider applications, APIs are implemented to facilitate programmatic access to their data, In order to grant access to the appropriate resources, these applications typically require an &lt;em&gt;authentication and authorization flow&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. While many applications offer login options with Google or OAuth, some still rely on their own password authentication or API tokens/keys. Typically, these credentials are passed as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; parameters. However, in the case of secret.app, they were transmitted as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; or query parameters. Furthermore, this particular application demanded both a username and password for authentication alongside OAuth.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/oauth/v2/token?client_id=&amp;lt;ID&amp;gt;&amp;amp;client_secret=&amp;lt;secret&amp;gt;&amp;amp;grant_type=password&amp;amp;scope=user&amp;amp;username=community@victim.com&amp;amp;password=&amp;lt;password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evidences from API Documentation&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --location &apos;https://api.secret.app/oauth/v2/token&apos; \
--form &apos;client_id=&quot;&quot;&apos; \
--form &apos;client_secret=&quot;&quot;&apos; \
--form &apos;grant_type=&quot;password&quot;&apos; \
--form &apos;scope=&quot;user&quot;&apos; \
--form &apos;username=&quot;&quot;&apos; \
--form &apos;password=&quot;&quot;&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;During the OAuth or authentication process, the username and password were provided through query parameters, and these details were captured and recorded by the WayBack Machine.&lt;/p&gt;

&lt;h3 id=&quot;authentication-bypass-detection&quot;&gt;Authentication Bypass Detection&lt;/h3&gt;
&lt;p&gt;In this particular scenario, the vulnerable application is commonly susceptible to &lt;em&gt;CVE-2023‚Äì0328&lt;/em&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; or a similar vulnerability. In simpler terms, this vulnerability enables an attacker to gain access to unauthorized resources by exploiting a lack of capability checks and handling of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authorization&lt;/code&gt; header.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://api.secret.app/account/xxxx/members?members[fields][]=firstName&amp;amp;member_data[fields][]=lastName&amp;amp;membet_data[fields][]=organizationName&amp;amp;sid=xxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By visiting the links that have been logged on archive.org (WayBack / WebArchive), it is possible to identify and detect this vulnerability.&lt;/p&gt;

&lt;h3 id=&quot;user-personal-information-leakage&quot;&gt;User Personal Information Leakage&lt;/h3&gt;
&lt;p&gt;This particular issue is commonly observed in applications that utilize &lt;em&gt;Shopify&lt;/em&gt;&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; to create an online store for selling products. In such cases, the checkout and orders URL paths are often not adequately secured or configured to require authentication. As a consequence, when an actor visits the links stored in archive.org, they gain unauthorized access to the user‚Äôs personal information, including the billing details. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://shop.secret.app/xxxxx/orders/&amp;lt;SSID&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;unauthorized-access-to-user-preferences&quot;&gt;Unauthorized Access to User Preferences&lt;/h3&gt;
&lt;p&gt;This issue arises when an application fails to enforce authentication through request headers or cookies, thereby granting access to any actor who possesses the preference link containing the user ID or token. In my case, the application did not require cookie or header authentication, enabling the actor to modify user preferences solely by accessing a specially crafted URL, which was logged in archive.org. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://pref.secret.app/unsubscribe?unsubscribe=1&amp;amp;uid=&amp;lt;UUID&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-points&quot;&gt;Key Points&lt;/h3&gt;
&lt;p&gt;As demonstrated by the examples provided above, the targeted application can be susceptible to various vulnerabilities. It is crucial to comprehend the underlying logic behind any functionality that an application allows. The vulnerabilities illustrated are not exhaustive, and with the help of the WayBack Machine, bug bounty hunters can uncover numerous intriguing vulnerabilities such as Cross-Site Scripting (XSS), Insecure Direct Object Reference (IDOR), and Remote Code Execution (RCE).&lt;/p&gt;

&lt;h3 id=&quot;easy-hunt&quot;&gt;Easy Hunt&lt;/h3&gt;
&lt;p&gt;While a significant number of individuals depend on the command line interface to retrieve information and access logged URLs from the WayBack Machine, here is an alternative method available for obtaining the same data through a web browser interface.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://web.archive.org/cdx/search/cdx?url=*.secret.app/*&amp;amp;output=text&amp;amp;fl=original&amp;amp;collapse=urlkey
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;
&lt;p&gt;While the recommended approach is to identify and address each vulnerability individually, organizations can opt for a simple fix by utilizing a specific entry in their robots.txt file to prevent or block the WayBack Machine from crawling their applications.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User-agent: la_archiver
Disallow: /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To gain further insight into the solution, I recommend reading an excellent article on the topic available at &lt;em&gt;reputationx.com&lt;/em&gt;&lt;sup id=&quot;fnref:4&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;I hope you have found this post informative and learnt something new from it.&lt;br /&gt;
Thanks!&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc6749&quot; target=&quot;_blank&quot;&gt;Authentication and Authorization flow&lt;/a&gt;¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.cve.org/CVERecord?id=CVE-2023-0328&quot; target=&quot;_blank&quot;&gt;CVE-2023‚Äì0328&lt;/a&gt;¬†&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.shopify.com/&quot; target=&quot;_blank&quot;&gt;Shopify&lt;/a&gt;¬†&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://blog.reputationx.com/block-wayback-machine&quot; target=&quot;_blank&quot;&gt;reputationx.com&lt;/a&gt;¬†&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Saransh Saraf</name></author><category term="posts" /><summary type="html"></summary></entry><entry><title type="html">Unlocking the Power of Observation: How Experienced Hackers Stand Out in a Sea of Amateurs</title><link href="http://localhost:4000/unlocking-the-power-of-observation-part-1.html" rel="alternate" type="text/html" title="Unlocking the Power of Observation: How Experienced Hackers Stand Out in a Sea of Amateurs" /><published>2023-02-12T00:00:00+05:30</published><updated>2023-02-12T00:00:00+05:30</updated><id>http://localhost:4000/unlocking-the-power-of-observation-part-1</id><content type="html" xml:base="http://localhost:4000/unlocking-the-power-of-observation-part-1.html">&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*CSzOXZh3oguY5uNaFETg0g.jpeg&quot; alt=&quot;banner&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hackers need to embrace their superpower in order to become more efficient and meaningful, while doing bug bounty they have to search for weaknesses and also make sure that with their actions the application doesn‚Äôt crash.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*7TL7yeUfzC8zLRgDtJcyXA.jpeg&quot; alt=&quot;image&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the interest of time, let‚Äôs talk about one feature I saw in the middle of last year.&lt;/p&gt;

&lt;h3 id=&quot;functionality&quot;&gt;Functionality&lt;/h3&gt;
&lt;p&gt;This functionality gives users the ability to claim a subdomain on the application (website) to create a workspace and work directly on that subdomain. (In simple words, the application allows users to create instances)&lt;/p&gt;

&lt;h3 id=&quot;attack-i--account-takeover&quot;&gt;Attack (i) : Account Takeover&lt;/h3&gt;
&lt;p&gt;I‚Äôve already touched on this, so I suggest you read my previous &lt;em&gt;article&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I assume you read this article, so let‚Äôs continue.&lt;/p&gt;

&lt;h3 id=&quot;attack-ii--account-takeover&quot;&gt;Attack (ii) : Account Takeover&lt;/h3&gt;
&lt;p&gt;Application Flow : When a user tries to sign-up, the application doesn‚Äôt requires user to verify the email first and after completing the sign-up process successfully the user gets a ‚Äúlogin token‚Äù and with the help of this ‚Äúlogin token‚Äù user can login into his/her account without the password.&lt;br /&gt;
&lt;em&gt;Note: This token is ‚ÄúOne Time Token‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is the same application as &lt;em&gt;the Attack (i)&lt;/em&gt; so again, I created a new subdomain and on the claim subdomain request I replaced my email with the victim‚Äôs email and as I don‚Äôt know the password of the victim‚Äôs email I added ‚Äúanything‚Äù in the password field.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;methodName&quot;: &quot;onboard&quot;,
  &quot;params&quot;: {
    &quot;some_params&quot;: {
      &quot;some_name&quot;: &quot;anything&quot;,
      &quot;some_modules&quot;: [
        1
      ]
    },
    &quot;user_params&quot;: {
      &quot;name&quot;: &quot;CanBeAnything&quot;,
      &quot;email&quot;: &quot;hunterzerocipher@gmail.com&quot;,
      &quot;password&quot;: &quot;Anything&quot;
    },
    &quot;community_params&quot;: {
      &quot;name&quot;: &quot;anything&quot;,
      &quot;slug&quot;: &quot;anything&quot;,
      &quot;c_id&quot;: 715,
      &quot;client_time_zone&quot;: &quot;Asia/Calcutta&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On the response I got the ‚Äúlogin token‚Äù and made a browser GET request on the victim‚Äôs subdomain with the ‚Äúlogin token‚Äù and I was logged-in in the victim‚Äôs account.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://victim.application.com/admin/login?login_token=xxxxxxxxxxx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this example what happened is the application doesn‚Äôt actually generate the login token with multiple details of the user, it only used the email to generate the login token and as the login token only contains a pass to login as the user without checking the subdomain or the organization, allowing attacker to create login pass with the victim email.&lt;/p&gt;

&lt;h3 id=&quot;attack-iii--system-conflict&quot;&gt;Attack (iii) : System Conflict&lt;/h3&gt;
&lt;p&gt;I have to say this example is a bit funny ;)&lt;/p&gt;

&lt;p&gt;As the previous example I was trying to create a subdomain in the application and the url was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://portal.application.com/register&lt;/code&gt; and while login I noticed that the url is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://login.application.com/admin/login&lt;/code&gt;
So I again tried to create a subdomain ‚Äúxzcvb‚Äù and Intercepted the request in &lt;em&gt;Burp Suite&lt;/em&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; changed the subdomain name to ‚Äúlogin‚Äù and sent the request and as a surprise I got ‚Äú200 OK‚Äù&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:640/format:webp/1*XzlnW_sVtRflEd_je697Iw.png&quot; alt=&quot;image&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What‚Äôs the Impact? Due to some reason &lt;em&gt;(Well I think it happened because the application‚Äôs module which was responsible to create subdomains had over privileges)&lt;/em&gt; when a user tries to visit login.application.com or tries to recreate his/her session the application gets confused ‚Äúwhere to take the user‚Äù making the subdomain not reachable ultimately making the application not reachable.&lt;/p&gt;

&lt;p data-content=&quot;footnotes&quot;&gt;I hope it gave you a clear idea how efficient bug bounty and penetration testing becomes when you use your superpowers rather than relaying on the automation and third party tools.
I hope you‚Äôve learnt something new with this.&lt;br /&gt;
Thank You!
‚Äî&lt;/p&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;/code-flaws-part-1.html&quot; target=&quot;_blank&quot;&gt;Previous Article&lt;/a&gt;¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://portswigger.net/burp&quot; target=&quot;_blank&quot;&gt;Burp Suite&lt;/a&gt;¬†&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Saransh Saraf</name></author><category term="posts" /><summary type="html"></summary></entry><entry><title type="html">Code flaws leads to Organization Account Takeover</title><link href="http://localhost:4000/code-flaws-part-1.html" rel="alternate" type="text/html" title="Code flaws leads to Organization Account Takeover" /><published>2022-10-13T00:00:00+05:30</published><updated>2022-10-13T00:00:00+05:30</updated><id>http://localhost:4000/code-flaws-part-1</id><content type="html" xml:base="http://localhost:4000/code-flaws-part-1.html">&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*TXPw0GXprB2NHBoW4-EvYA.png&quot; alt=&quot;banner&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-application-design&quot;&gt;the Application Design&lt;/h3&gt;
&lt;p&gt;The Application was only allowing one Admin/Manager per one organization, but other viewers has to login in order to view the content.&lt;br /&gt;
&lt;em&gt;Note: After creating an account user cannot change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;organization_name&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;design-flaw-insecure-design&quot;&gt;Design Flaw/ Insecure Design&lt;/h3&gt;
&lt;p&gt;While creating an account I saw a very weird parameter in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /some_ajax/create_event_flow HTTP/1.1
Host: portal.example.com
Connection: close
Content-Length: 663
sec-ch-ua: &quot;Google Chrome&quot;;v=&quot;105&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;105&quot;
Accept: application/json, text/javascript, */*; q=0.01
Content-Type: application/json; charset=UTF-8
X-Requested-With: XMLHttpRequest
sec-ch-ua-mobile: ?0
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
sec-ch-ua-platform: &quot;Linux&quot;
Origin: https://portal.example.com
Sec-Fetch-Site: same-origin
Sec-Fetch-Mode: cors
Se;c-Fetch-Dest: empty
Referer: https://portal.example.com/create_event_flow
Accept-Encoding: gzip, deflate
Accept-Language: en-GB,en-US;q=0.9,en;q=0.8
Cookie:
{&quot;methodName&quot;:&quot;onboard&quot;,&quot;params&quot;:{&quot;some_params&quot;:{&quot;some_name&quot;:&quot;Account takeover&quot;,&quot;some_modules&quot;:[1]},&quot;user_params&quot;:{&quot;name&quot;:&quot;User_name&quot;,&quot;email&quot;:&quot;admin@mr23r0.rocks&quot;,&quot;password&quot;:&quot;Password_Secret&quot;},&quot;community_params&quot;:{&quot;name&quot;:&quot;Organization_name&quot;,&quot;slug&quot;:&quot;testthing-for-ato&quot;,&quot;c_id&quot;:683,&quot;client_time_zone&quot;:&quot;Asia/Calcutta&quot;}}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c_id&lt;/code&gt; noticed it? I hope so, let‚Äôs see what is happening in the backend, While trying to register, the application creates a entry with the email address and creates a row in the organization table (if it‚Äôs SQL) then our current request goes into the users table and makes a user with a predefined organization.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO users (username, password, organization) VALUES (&quot;Jack&quot;,&quot;123&quot;, &quot;organization_name&quot;) WHERE c_id=&apos;683&apos;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I changed the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c_id&lt;/code&gt; with the victim‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c_id&lt;/code&gt; and as expected it took me to the victim‚Äôs organization. So we got our first bug ;) Design flaw but we can also call it &lt;em&gt;Horizontal Privilege Escalation&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;br /&gt;
&lt;em&gt;Note : The Application doesn‚Äôt supports multiple Admin/Manager in one organization.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When I do testing, primarily what I want to achieve is an Account takeover and testing is like a video game for me completing every level one by one‚Ä¶ so I started looking for more vulnerabilities, after 15 minutes of search I got it, found a &lt;em&gt;Stored Cross Site Scripting&lt;/em&gt;&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Organization_name&lt;/code&gt; now the problem is how can I change the victim‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Organization_name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I tried to replicate the create an account request and BOOM!! we can send a POST request to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/some_ajax/create_event_flow&lt;/code&gt; no authentication required and also if we put cross site scripting payload in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Organization_name&lt;/code&gt; and change our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c_id&lt;/code&gt; with the victim‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c_id&lt;/code&gt;, the victim‚Äôs &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Organization_name&lt;/code&gt; gets changed ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:562/format:webp/1*Pkd4zlVh7_ynWK7o1TOR8g.png&quot; alt=&quot;image&quot; class=&quot;iod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We got the victim‚Äôs active cookies ‚Äî but no-one will accept account takeover with active cookies, So I simply checked for &lt;em&gt;Session Fixation or No Logout&lt;/em&gt;&lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; and I got lucky the application was vulnerable.&lt;/p&gt;

&lt;p&gt;Last two vulnerability, the application was taking current password in order to change password but after intercepting the request I found that they‚Äôre not sending or checking the current password and there wasn‚Äôt any authentication on change email operation.&lt;/p&gt;

&lt;h3 id=&quot;quick-wrap-up&quot;&gt;Quick wrap up&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Create an account --&amp;gt; change the &quot;c_id&quot; and add the blind xss payload in the &quot;organization_name&quot;
copy the victim&apos;s cookies 
Login as the victim by using the cookies
change the password by using:
           i. Change Password
           ii. Change Email --&amp;gt; Recover password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I hope you‚Äôve learned something new from this.&lt;br /&gt;
Thanks!&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://heimdalsecurity.com/blog/privilege-escalation/&quot; target=&quot;_blank&quot;&gt;Horizontal Privilege Escalation&lt;/a&gt;¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://portswigger.net/web-security/cross-site-scripting/stored&quot; target=&quot;_blank&quot;&gt;Stored Cross Site Scripting&lt;/a&gt;¬†&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://owasp.org/www-community/attacks/Session_fixation&quot; target=&quot;_blank&quot;&gt;Session Fixation or No Logout&lt;/a&gt;¬†&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Saransh Saraf</name></author><category term="posts" /><summary type="html"></summary></entry><entry><title type="html">The Database Handover | A Dumb Mistake | Critical BUG</title><link href="http://localhost:4000/the-database-handover.html" rel="alternate" type="text/html" title="The Database Handover | A Dumb Mistake | Critical BUG" /><published>2022-09-02T00:00:00+05:30</published><updated>2022-09-02T00:00:00+05:30</updated><id>http://localhost:4000/the-database-handover</id><content type="html" xml:base="http://localhost:4000/the-database-handover.html">&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*xCrUUPjQj7flq5ReQUfcXA.png&quot; alt=&quot;banner&quot; class=&quot;ioda&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-wakeup-call&quot;&gt;The Wakeup Call&lt;/h3&gt;
&lt;p&gt;Have you ever used these type of tools ?
-ShareIt&lt;br /&gt;
-Xender&lt;br /&gt;
-Inshare&lt;br /&gt;
-ShareMe&lt;br /&gt;
If yes, then you‚Äôre gonna enjoy it, if you never used it than I don‚Äôt believe that you ever lived your 13 age, Go and try using one now before reading it further.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;These tools are used to share Data from one device to another, and sometimes also helps to switch devices (move data from one to another)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-beginning-of-the-story&quot;&gt;The Beginning of the Story&lt;/h3&gt;
&lt;p&gt;I had a Pentesting Contract from a big German Company, and I earned 1000 Euros from it‚Ä¶.. :) For :&lt;/p&gt;

&lt;p&gt;-Email Verification Bypass (2 Methods)&lt;br /&gt;
-Stored Cross Site Scripting&lt;br /&gt;
-Insecure Direct Object reference (IDOR) leaking Employee Data&lt;br /&gt;
-Broken Link Hijacking&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*n3DAfWFDWbRSHKtRE86ZVQ.png&quot; alt=&quot;image&quot; class=&quot;ioda&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So I again Started to look for more bugs and called it #2 Round. I had mapped the whole infrastructure in the #1st Round.&lt;/p&gt;

&lt;p&gt;So this time I had small and well-mapped scope for testing, So I started to revisit my old issues (to try bypassing these) but this ‚ÄúBroken link hijacking‚Äù returned as a weird result,‚Ä¶. For fixing it The Company changed the whole child company name &amp;amp; also the domain.&lt;/p&gt;

&lt;h3 id=&quot;the-ritual-of-comparing&quot;&gt;The Ritual of Comparing&lt;/h3&gt;
&lt;p&gt;After visiting the new domain ‚ÄúIAMNEW.COM‚Äù I saw something really terrible form of ‚Äúmoving on‚Äù. All subdomains were totally Identical‚Ä¶. and I started to get demotivated that I‚Äôm not gonna find anything new here, but by mistake I viewed my wappalyzer and saw ‚ÄúWordpress 4.8‚Äù banner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:440/format:webp/1*jQ_rudboUxgB-QixF0mEZQ.gif&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-ritual-of-background-enumeration&quot;&gt;The Ritual of Background Enumeration&lt;/h3&gt;
&lt;p&gt;I quickly started my WPSCAN but I didn‚Äôt get any amazing results, Obviously I was sad &amp;amp; frustrated‚Ä¶ so I gave myself 30 minutes and started thinking what can I do now, but after a couple of thoughts I got a spark I recalled A Line of my Mentor/ Inspiration ‚ÄúIf you wanna do something to make sure you do your best‚Äù&lt;/p&gt;

&lt;p&gt;Without waiting a minute I made a WordPress API token and ran it in the background, meanwhile I started my manual recon and testing but No luck :(
So I came to look at the WpScan results, And saw &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debug.log&lt;/code&gt; is publicly accessible.&lt;/p&gt;

&lt;h3 id=&quot;the-ritual-of-dumb-mistakes&quot;&gt;The Ritual of Dumb Mistakes&lt;/h3&gt;
&lt;p&gt;I started looking at the log, and I found list of Users and some Auth keys and reported it as an ‚ÄúInformation disclosure‚Äù&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*L1zj18S9eLUl28FR8RZ1aQ.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But I was still feeling dumb, my Gut feeling was telling me that I‚Äôm missing something, So I again started to look at the log and I found the Database Name so I again added it in my previous ‚ÄúInformation disclosure‚Äù&lt;/p&gt;

&lt;p&gt;But still, something was missing, ‚Äúmy mind was keeping telling me to look deeper you dumb idiot‚Äù so took a cup of tea and viewed the log on my TV (for better preview) after reading 580 lines of logs I found the treasure:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/v2/resize:fit:720/format:webp/1*qxBl4V0C131ob-EswiVMfQ.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But I again did the dumb mistake, I saw that the backup size is &amp;gt;500MB so reported it as Possible Denial of Service (DOS) because I was unable to extract it, I never encountered a file like this backup before. :(&lt;/p&gt;

&lt;h3 id=&quot;the-miracle&quot;&gt;The Miracle&lt;/h3&gt;
&lt;p&gt;The Next Day I was still thinking about this file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.Daf&lt;/code&gt; questing myself why? Why are you so dumb?&lt;/p&gt;

&lt;p&gt;So I started again looking for the answers, after reading some threads on stackoverflow.com I moved myself to YouTube and after trying multiple search queries I finally found a video and really great tutorial :&lt;/p&gt;

&lt;iframe width=&quot;98%&quot; height=&quot;300&quot; class=&quot;ioda&quot; style=&quot;filter:invert(100%)&quot; src=&quot;https://www.youtube.com/embed/d7JrZYoiRuE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;After navigating nested folders, I‚Äôve found the Database backup SQL file under: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dup-installer/database.sql&lt;/code&gt;
It was containing All users, password hashes and much more juicy stuff :)&lt;/p&gt;

&lt;h3 id=&quot;the-bug&quot;&gt;The BUG&lt;/h3&gt;
&lt;p&gt;As we have used the file transfer applications, similar thing is available in Wordpress which is called &lt;a href=&quot;https://wordpress.org/plugins/duplicator/&quot; target=&quot;_blank&quot;&gt;Duplicator&lt;/a&gt; which allows the admin to make a copy of the existing Wordpress Application and it‚Äôs too easy to use.&lt;/p&gt;

&lt;p&gt;But sometimes developer forgets to remove the Backup files to remove from the new server (domain)&lt;/p&gt;

&lt;p&gt;Simple isn‚Äôt it?&lt;/p&gt;

&lt;h3 id=&quot;discovery&quot;&gt;Discovery&lt;/h3&gt;
&lt;p&gt;There is a list of files that you may find in the backup:&lt;/p&gt;

&lt;p&gt;wp-config.bak (wordpress config backup)
All users Info
full database backup (containing Users with password hashes &amp;amp; articles)
all articles (including unlisted &amp;amp; drafts)
all wordpress files (for static analysis)
You may have to dig between folders and unique files, but I can promise you one thing at the end of the I‚Äôll be worth it.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</content><author><name>Saransh Saraf</name></author><category term="posts" /><summary type="html"></summary></entry></feed>